[{"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\index.js":"1","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\App.js":"3","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Chat\\Chat.js":"4","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Chat\\ChatScreen.js":"5","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\TabScreen.js":"6","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\Tabs.js":"7","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreen.js":"8","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreenLeft.js":"9","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\CircularProgress.js":"10","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\CurrencySystem.js":"11","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreenCenter.js":"12","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreenRight.js":"13","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\CurrencySystemRound.js":"14","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\RecmondadPlatformList.js":"15","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\MainRecmondationScreen.js":"16","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Services\\ChatServices.js":"17","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\store.js":"18","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reducer\\index.js":"19","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reducer\\chatScreenReducer.js":"20","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\action\\chatScreenAction.js":"21","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reducer\\tabReducer.js":"22","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\action\\tabAction.js":"23","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\FiatScreen.js":"24","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\FiatScreenLeft.js":"25","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\FiatScreenCenter.js":"26"},{"size":554,"mtime":1613380376416,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":475,"mtime":1612788236046,"results":"30","hashOfConfig":"28"},{"size":1348,"mtime":1613054531582,"results":"31","hashOfConfig":"28"},{"size":16621,"mtime":1613473937272,"results":"32","hashOfConfig":"28"},{"size":3435,"mtime":1613473936358,"results":"33","hashOfConfig":"28"},{"size":2952,"mtime":1613472261826,"results":"34","hashOfConfig":"28"},{"size":2876,"mtime":1613393286704,"results":"35","hashOfConfig":"28"},{"size":3115,"mtime":1613387248707,"results":"36","hashOfConfig":"28"},{"size":2361,"mtime":1611660700942,"results":"37","hashOfConfig":"28"},{"size":868,"mtime":1611662840611,"results":"38","hashOfConfig":"28"},{"size":4989,"mtime":1613386121511,"results":"39","hashOfConfig":"28"},{"size":1511,"mtime":1611667303722,"results":"40","hashOfConfig":"28"},{"size":879,"mtime":1611666470123,"results":"41","hashOfConfig":"28"},{"size":5273,"mtime":1613460648355,"results":"42","hashOfConfig":"28"},{"size":613,"mtime":1612604007770,"results":"43","hashOfConfig":"28"},{"size":597,"mtime":1612530008861,"results":"44","hashOfConfig":"28"},{"size":387,"mtime":1613380359203,"results":"45","hashOfConfig":"28"},{"size":639,"mtime":1613388635959,"results":"46","hashOfConfig":"28"},{"size":758,"mtime":1613378892616,"results":"47","hashOfConfig":"28"},{"size":574,"mtime":1612600231398,"results":"48","hashOfConfig":"28"},{"size":478,"mtime":1613471633949,"results":"49","hashOfConfig":"28"},{"size":227,"mtime":1613471652576,"results":"50","hashOfConfig":"28"},{"size":2903,"mtime":1613397945188,"results":"51","hashOfConfig":"28"},{"size":3442,"mtime":1613471917040,"results":"52","hashOfConfig":"28"},{"size":4443,"mtime":1613473937778,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"oblmbn",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\index.js",["119","120","121"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store, persistor } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={persistor}> */}\n    <HashRouter>\n      <App />\n    </HashRouter>\n    {/* </PersistGate> */}\n  </Provider>,\n  document.getElementById(\"root\")\n);\n",["122","123"],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reportWebVitals.js",[],["124","125"],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\App.js",["126"],"import \"./custom.scss\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport MainRecmondationScreen from \"./Components/Recmondation/MainRecmondationScreen\";\nimport Chat from \"./Components/Chat/Chat\";\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <Chat />\n        </Route>\n        <Route exact path=\"/crypto\">\n          <MainRecmondationScreen />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Chat\\Chat.js",["127","128"],"import React from \"react\";\r\nimport ChatScreen from \"./ChatScreen\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport logo from \"../../Assets/images/logo.png\";\r\nimport cpu from \"../../Assets/images/cpu.png\";\r\nconst Chat = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      id=\"chatScreen\"\r\n    >\r\n      <Grid\r\n        item\r\n        xs={4}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <img src={logo} style={{ width: \"40%\" }} />\r\n        </div>\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"4%\" }}\r\n        >\r\n          <h3>Ai powered recommendation system</h3>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          <img src={cpu} style={{ width: \"15%\" }} />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <Paper elevation={3} variant=\"outlined\" id=\"chatPaper\">\r\n          <ChatScreen />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Chat\\ChatScreen.js",["129","130"],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\TabScreen.js",["131"],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\Tabs.js",["132","133"],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreen.js",["134"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport GraphScreenLeft from \"./GraphScreenLeft\";\r\nimport GraphScreenCenter from \"./GraphScreenCenter\";\r\nimport GraphScreenRight from \"./GraphScreenRight\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst GraphScreen = () => {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {/* left grid */}\r\n        <Grid item md={3}>\r\n          <GraphScreenLeft />\r\n        </Grid>\r\n        {/* center grid */}\r\n        <Grid item md={9}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          ></div>\r\n          <GraphScreenCenter />\r\n        </Grid>\r\n        {/* right grid */}\r\n        {/* <Grid item md={4}>\r\n          <GraphScreenRight />\r\n        </Grid> */}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        style={{\r\n          paddingTop: \"10px\",\r\n          paddingLeft: \"20px\",\r\n        }}\r\n      >\r\n        <Grid item xs={12} style={{ display: \"flex\", marginTop: \"20px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div>\r\n                <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>\r\n                  Sell/Reinvest?<br></br>Compound Rewards\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <Switch\r\n                  checked={state.checkedA}\r\n                  onChange={handleChange}\r\n                  name=\"checkedA\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ marginRight: \"25%\" }}>\r\n            <p\r\n              style={{\r\n                textAlign: \"justify\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"600\",\r\n              }}\r\n            >\r\n              The Effective earnings depend on ay dynamic variables. Even the\r\n              presented results are based on proprietary predication formulas.\r\n              We do not guarantee any kind of earning. Please read our\r\n              <span style={{ color: \"red\" }}> Disclaimer</span> for further\r\n              information.\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphScreen;\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreenLeft.js",["135"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\n\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\nimport randomColor from \"randomcolor\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst GraphScreenLeft = () => {\r\n  const cryptoData = useSelector(\r\n    (state) => state.chatScreen.cryptoData.conversion_dict\r\n  );\r\n\r\n  const cryptoDict = useSelector((state) =>\r\n    state.chatScreen.cryptoData ? state.chatScreen.cryptoData.crypto_dict : null\r\n  );\r\n  const cryptoDictInput = useSelector((state) =>\r\n    state.chatScreen.userCryptoData\r\n      ? state.chatScreen.userCryptoData.count_crypto\r\n      : null\r\n  );\r\n\r\n  const [amountText, setAmountText] = useState(null);\r\n\r\n  let covertAmount = () => {\r\n    let currency = Object.keys(cryptoDict)[0];\r\n\r\n    let coinPriceWithoutDolor = cryptoDict[currency].price.replace(\"$\", \"\");\r\n    let coinPriceWithoutComa = coinPriceWithoutDolor.replace(\",\", \"\");\r\n    let amount = parseFloat(cryptoDictInput) * parseFloat(coinPriceWithoutComa);\r\n\r\n    setAmountText(\"$\" + amount.toFixed(2));\r\n  };\r\n  useEffect(() => {\r\n    if (cryptoDict) {\r\n      covertAmount();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n      style={{\r\n        paddingTop: \"10px\",\r\n        paddingLeft: \"20px\",\r\n      }}\r\n    >\r\n      <Grid item xs={12}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <div style={{ display: \"flex\", position: \"relative\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"150px\",\r\n                  height: \"150px\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <CircularProgressbar\r\n                  value={100}\r\n                  text={amountText && amountText}\r\n                  style={{ fontSize: \"12px\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{ position: \"absolute\", bottom: \"10px\", left: \"110%\" }}\r\n              >\r\n                <h3>\r\n                  Total <br></br> Investment\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} style={{ marginTop: \"20px\", height: \"10vh\" }}>\r\n        <h3>Conversion Rates</h3>\r\n\r\n        <Paper elevation={0} id=\"conversionRatePaper\">\r\n          {cryptoData &&\r\n            Object.entries(cryptoData).map(([key, value]) => (\r\n              <CurrencySystem\r\n                color={randomColor()}\r\n                key={key}\r\n                currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                value={\"$\" + value}\r\n              />\r\n            ))}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GraphScreenLeft;\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\CircularProgress.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\CurrencySystem.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreenCenter.js",["136","137","138","139","140","141"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nconst GraphScreenCenter = () => {\r\n  const classes = useStyles();\r\n  const profitData = useSelector((state) => state.chatScreen.cryptoData.profit);\r\n  const cryptoDict = useSelector(\r\n    (state) => state.chatScreen.cryptoData.crypto_dict\r\n  );\r\n  const profitDataList = useSelector(\r\n    (state) => state.chatScreen.cryptoData.profit_dict\r\n  );\r\n\r\n  const [rateSetting, setRateSetting] = useState(null);\r\n\r\n  let currencyFunction = () => {\r\n    let currency = Object.keys(cryptoDict)[0];\r\n    let cryptoObject = {\r\n      currency: Object.keys(cryptoDict)[0],\r\n      changeRate: cryptoDict[currency].changerate,\r\n      price: cryptoDict[currency].price,\r\n    };\r\n\r\n    setRateSetting(cryptoObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cryptoDict !== undefined) {\r\n      currencyFunction();\r\n    }\r\n  }, [cryptoDict, profitDataList, profitData]);\r\n\r\n  let series = [44, 55, 13, 43, 22];\r\n  let options = {\r\n    chart: {\r\n      width: \"2000px\",\r\n      type: \"pie\",\r\n    },\r\n\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n    },\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          paddingTop: \"20px\",\r\n          paddingLeft: \"10%\",\r\n          paddingRight: \"10%\",\r\n        }}\r\n      >\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Coin</TableCell>\r\n                <TableCell>Change Rate</TableCell>\r\n                <TableCell>Price</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  {/* {cryptoDict\r\n                    ? Object.keys(cryptoDict)[0].charAt(0).toUpperCase() +\r\n                      Object.keys(cryptoDict)[0].slice(1)\r\n                    : null} */}\r\n                  {rateSetting &&\r\n                    rateSetting.currency.charAt(0).toUpperCase() +\r\n                      rateSetting.currency.slice(1)}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {/* {cryptoDict ? cryptoDict.`${key}`.changerate : null} */}\r\n                  {rateSetting && rateSetting.changeRate}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {/* {cryptoDict ? cryptoDict.bitcoin.price : null} */}\r\n                  {rateSetting && rateSetting.price}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n        </TableContainer>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan=\"2\"\r\n                  style={{ textAlign: \"center\", fontSize: \"30px\" }}\r\n                >\r\n                  Profit List\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>At End Date Profit</TableCell>\r\n                <TableCell>{profitData && \"$ \" + profitData}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Daily Profit</TableCell>\r\n                <TableCell>\r\n                  {profitDataList && \"$ \" + profitDataList.daily}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Weekly Profit</TableCell>\r\n                <TableCell>\r\n                  {profitDataList && \"$ \" + profitDataList.weekly}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Monthly Profit</TableCell>\r\n                <TableCell>\r\n                  {profitDataList && \"$ \" + profitDataList.monthly}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Yearly Profit</TableCell>\r\n                <TableCell>\r\n                  {profitDataList && \"$ \" + profitDataList.yearly}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphScreenCenter;\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\GraphScreenRight.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\CurrencySystemRound.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\RecmondadPlatformList.js",["142"],"import React from \"react\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport { MainColor, Background } from \"../../Colors.json\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\nimport randomColor from \"randomcolor\";\r\nconst RecmondadPlatformList = () => {\r\n  const cryptoData = useSelector(\r\n    (state) => state.chatScreen.cryptoData.reward_dict\r\n  );\r\n  const tabName = useSelector((state) => state.tab.tabNumber);\r\n  const fiatPriceDict = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.price_dict\r\n  );\r\n  const fiatConversionDict = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.converted_cryptos\r\n  );\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\r\n      {tabName === \"Crypto\" ? (\r\n        <>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              background: MainColor,\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"20px\", color: \"white\", padding: \"25px\" }}>\r\n              Recommended Platform\r\n            </p>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              background: Background,\r\n              width: \"100%\",\r\n\r\n              height: \"80vh\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n              {cryptoData &&\r\n                Object.entries(cryptoData).map(([key, value]) => (\r\n                  <div\r\n                    style={{\r\n                      paddingLeft: \"25px\",\r\n                      paddingTop: \"15px\",\r\n                      paddingBottom: \"5px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                    key={key}\r\n                  >\r\n                    <p style={{ fontSize: \"1.5rem\", fontWeight: \"600\" }}>\r\n                      {key}\r\n                    </p>\r\n                    <a\r\n                      href={value.Link}\r\n                      target=\"_blank\"\r\n                      style={{\r\n                        fontSize: \"1rem\",\r\n                        fontWeight: \"600\",\r\n                        color: MainColor,\r\n                      }}\r\n                    >\r\n                      {value.Link}\r\n                    </a>\r\n                    <p style={{ fontSize: \"1rem\", fontWeight: \"400\" }}>\r\n                      Reward: {value.Reward}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n            </Paper>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              background: MainColor,\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"16px\", color: \"white\", padding: \"12px\" }}>\r\n              Price\r\n            </p>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              background: Background,\r\n              width: \"100%\",\r\n\r\n              height: \"38vh\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n              {fiatPriceDict &&\r\n                Object.entries(fiatPriceDict).map(([key, value]) => (\r\n                  <CurrencySystem\r\n                    color={randomColor()}\r\n                    key={key}\r\n                    currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                    value={value}\r\n                  />\r\n                ))}\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              background: MainColor,\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"16px\", color: \"white\", padding: \"12px\" }}>\r\n              Conversion Rates\r\n            </p>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              background: Background,\r\n              width: \"100%\",\r\n\r\n              height: \"38vh\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n              {fiatConversionDict &&\r\n                Object.entries(fiatConversionDict).map(([key, value]) => (\r\n                  <CurrencySystem\r\n                    color={randomColor()}\r\n                    key={key}\r\n                    currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                    value={\"$\" + value}\r\n                  />\r\n                ))}\r\n            </Paper>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RecmondadPlatformList;\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\MainRecmondationScreen.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Services\\ChatServices.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\store.js",["143","144"],"import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./reducer/index\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n// export const persistor = persistStore(store);\r\n// export default { store, persistor };\r\nexport default { store };\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reducer\\index.js",["145","146"],"import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { chatScreenReducer } from \"./chatScreenReducer\";\r\nimport { rabReducer } from \"./tabReducer\";\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n//   whitelist: [\"chatScreen\"],\r\n// };\r\n\r\nexport default combineReducers({\r\n  chatScreen: chatScreenReducer,\r\n  tab: rabReducer,\r\n});\r\n\r\n// export default persistReducer(rootReducer);\r\n// export default persistReducer(persistConfig, rootReducer);\r\n\r\n// export default combineReducers({\r\n//   chatScreen: chatScreenReducer,\r\n// });\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reducer\\chatScreenReducer.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\action\\chatScreenAction.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\reducer\\tabReducer.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\action\\tabAction.js",[],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\FiatScreen.js",["147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FiatScreenLeft from \"./FiatScreenLeft\";\r\nimport GraphScreenCenter from \"./GraphScreenCenter\";\r\nimport FiatScreenCenter from \"./FiatScreenCenter\";\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst FiatScreen = () => {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {/* left grid */}\r\n        <Grid item md={3}>\r\n          <FiatScreenLeft />\r\n        </Grid>\r\n        {/* center grid */}\r\n        <Grid item md={9}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          ></div>\r\n          <FiatScreenCenter />\r\n        </Grid>\r\n        {/* right grid */}\r\n        {/* <Grid item md={4}>\r\n            <GraphScreenRight />\r\n          </Grid> */}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        style={{\r\n          paddingTop: \"10px\",\r\n          paddingLeft: \"20px\",\r\n        }}\r\n      >\r\n        <Grid item xs={12} style={{ display: \"flex\", marginTop: \"20px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div>\r\n                <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>\r\n                  Sell/Reinvest?<br></br>Compound Rewards\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <Switch\r\n                  checked={state.checkedA}\r\n                  onChange={handleChange}\r\n                  name=\"checkedA\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ marginRight: \"25%\" }}>\r\n            <p\r\n              style={{\r\n                textAlign: \"justify\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"600\",\r\n              }}\r\n            >\r\n              The Effective earnings depend on ay dynamic variables. Even the\r\n              presented results are based on proprietary predication formulas.\r\n              We do not guarantee any kind of earning. Please read our\r\n              <span style={{ color: \"red\" }}> Disclaimer</span> for further\r\n              information.\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiatScreen;\r\n","C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\FiatScreenLeft.js",["150","151","152"],"C:\\Users\\Arslan\\Documents\\StackYield\\stackyieldfrontend\\src\\Components\\Recmondation\\FiatScreenCenter.js",["153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { changeTabAction } from \"../../action/tabAction\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { userCryptoDataSaveAction } from \"../../action/chatScreenAction\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n}));\r\nconst FiatScreenCenter = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const fiatData = useSelector(\r\n    (state) =>\r\n      state.chatScreen.fiatData &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.recommended_crypto\r\n  );\r\n\r\n  const fiatDate = useSelector(\r\n    (state) =>\r\n      state.chatScreen.userFiatData && state.chatScreen.userFiatData.end_date\r\n  );\r\n\r\n  const [loading, setLoading] = useState(null);\r\n\r\n  let secondApi = async () => {\r\n    let apiTwoFormData = new FormData();\r\n    let formCryptoData = {\r\n      type_crypto: fiatData && fiatData.Name,\r\n      count_crypto: fiatData && fiatData.conversionrate.toString(),\r\n      end_date: fiatDate && fiatDate,\r\n    };\r\n    let newData = JSON.stringify(formCryptoData);\r\n    apiTwoFormData.append(\"data\", newData);\r\n\r\n    try {\r\n      setLoading(true);\r\n      let { data } = await formCryptoApi(apiTwoFormData);\r\n\r\n      dispatch(userCryptoDataSaveAction(formCryptoData));\r\n      setLoading(false);\r\n      dispatch(cryptoDataAction(data));\r\n      dispatch(changeTabAction(0));\r\n    } catch (error1) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  let handelStacking = () => {\r\n    secondApi();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          paddingTop: \"20px\",\r\n          paddingLeft: \"10%\",\r\n          paddingRight: \"10%\",\r\n        }}\r\n      >\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan=\"2\"\r\n                  style={{ textAlign: \"center\", fontSize: \"24px\" }}\r\n                >\r\n                  Recommended Cryptocurrency\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>\r\n                  {fiatData &&\r\n                    fiatData.Name.charAt(0).toUpperCase() +\r\n                      fiatData.Name.slice(1)}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Reward Rate</TableCell>\r\n                <TableCell>{fiatData && fiatData.changerate}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Conversion Rate</TableCell>\r\n                <TableCell>{fiatData && fiatData.conversionrate}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Price of Crypto</TableCell>\r\n                <TableCell>{fiatData && fiatData.price}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n        </TableContainer>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Button\r\n          style={{\r\n            background: \"#19469A\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={handelStacking}\r\n        >\r\n          Get Stacking\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiatScreenCenter;\r\n",{"ruleId":"156","severity":1,"message":"157","line":5,"column":17,"nodeType":"158","messageId":"159","endLine":5,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":23},{"ruleId":"156","severity":1,"message":"161","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":21},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"156","severity":1,"message":"168","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":26,"column":11,"nodeType":"171","endLine":26,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":40,"column":11,"nodeType":"171","endLine":40,"endColumn":53},{"ruleId":"172","severity":1,"message":"173","line":420,"column":5,"nodeType":"174","messageId":"175","endLine":436,"endColumn":6},{"ruleId":"176","severity":1,"message":"177","line":443,"column":6,"nodeType":"178","endLine":443,"endColumn":16,"suggestions":"179"},{"ruleId":"156","severity":1,"message":"180","line":12,"column":10,"nodeType":"158","messageId":"159","endLine":12,"endColumn":19},{"ruleId":"176","severity":1,"message":"181","line":51,"column":6,"nodeType":"178","endLine":51,"endColumn":20,"suggestions":"182"},{"ruleId":"176","severity":1,"message":"183","line":63,"column":6,"nodeType":"178","endLine":63,"endColumn":8,"suggestions":"184"},{"ruleId":"156","severity":1,"message":"185","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":24},{"ruleId":"176","severity":1,"message":"186","line":39,"column":6,"nodeType":"178","endLine":39,"endColumn":8,"suggestions":"187"},{"ruleId":"156","severity":1,"message":"188","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"189","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":17},{"ruleId":"176","severity":1,"message":"190","line":47,"column":6,"nodeType":"178","endLine":47,"endColumn":46,"suggestions":"191"},{"ruleId":"156","severity":1,"message":"192","line":49,"column":7,"nodeType":"158","messageId":"159","endLine":49,"endColumn":13},{"ruleId":"156","severity":1,"message":"193","line":50,"column":7,"nodeType":"158","messageId":"159","endLine":50,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":62,"column":5,"nodeType":"196","messageId":"197","endLine":62,"endColumn":10},{"ruleId":"198","severity":1,"message":"199","line":68,"column":21,"nodeType":"171","endLine":76,"endColumn":22},{"ruleId":"156","severity":1,"message":"200","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":10,"column":1,"nodeType":"203","endLine":10,"endColumn":26},{"ruleId":"156","severity":1,"message":"204","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"156","severity":1,"message":"205","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":15},{"ruleId":"156","severity":1,"message":"206","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"207","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"208","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":25},{"ruleId":"156","severity":1,"message":"209","line":11,"column":9,"nodeType":"158","messageId":"159","endLine":11,"endColumn":19},{"ruleId":"156","severity":1,"message":"210","line":35,"column":10,"nodeType":"158","messageId":"159","endLine":35,"endColumn":20},{"ruleId":"176","severity":1,"message":"186","line":50,"column":6,"nodeType":"178","endLine":50,"endColumn":8,"suggestions":"211"},{"ruleId":"156","severity":1,"message":"207","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"188","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"189","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":17},"no-unused-vars","'persistor' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'PersistGate' is defined but never used.","no-native-reassign",["212"],"no-negated-in-lhs",["213"],["212"],["213"],"'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addQuestion'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'tabAction' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'dispatch' and 'headers'. Either include them or remove the dependency array.",["216"],"'GraphScreenRight' is defined but never used.","React Hook useEffect has missing dependencies: 'covertAmount' and 'cryptoDict'. Either include them or remove the dependency array.",["217"],"'Chart' is defined but never used.","'TableBody' is defined but never used.","React Hook useEffect has a missing dependency: 'currencyFunction'. Either include it or remove the dependency array.",["218"],"'series' is assigned a value but never used.","'options' is assigned a value but never used.","no-dupe-keys","Duplicate key 'chart'.","ObjectExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'persistStore' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'persistReducer' is defined but never used.","'storage' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'GraphScreenCenter' is defined but never used.","'cryptoData' is assigned a value but never used.","'amountText' is assigned a value but never used.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},"Update the dependencies array to be: [addQuestion, messages]",{"range":"231","text":"232"},"Update the dependencies array to be: [dispatch, tabNumberGet]",{"range":"233","text":"234"},"Update the dependencies array to be: [dispatch, headers]",{"range":"235","text":"236"},"Update the dependencies array to be: [covertAmount, cryptoDict]",{"range":"237","text":"238"},"Update the dependencies array to be: [cryptoDict, profitDataList, profitData, currencyFunction]",{"range":"239","text":"240"},{"range":"241","text":"238"},[12159,12169],"[addQuestion, messages]",[1376,1390],"[dispatch, tabNumberGet]",[1666,1668],"[dispatch, headers]",[1293,1295],"[covertAmount, cryptoDict]",[1452,1492],"[cryptoDict, profitDataList, profitData, currencyFunction]",[1605,1607]]